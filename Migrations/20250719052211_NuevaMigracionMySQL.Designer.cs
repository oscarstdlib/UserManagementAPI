// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementAPI.Data;

#nullable disable

namespace UserManagementAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250719052211_NuevaMigracionMySQL")]
    partial class NuevaMigracionMySQL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            // Eliminar o comentar cualquier línea que use SqlServerModelBuilderExtensions o SqlServerPropertyBuilderExtensions

            modelBuilder.Entity("PermisoUsuario", b =>
                {
                    b.Property<int>("PermisosId")
                        .HasColumnType("int");

                    b.Property<long>("UsuariosId")
                        .HasColumnType("bigint");

                    b.HasKey("PermisosId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioPermisos", (string)null);
                });

            modelBuilder.Entity("UserManagementAPI.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    // SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id")); // This line is removed

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recurso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Permisos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accion = "GET",
                            Activo = true,
                            Descripcion = "Permite leer información de usuarios",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Leer Usuarios",
                            Recurso = "usuarios"
                        },
                        new
                        {
                            Id = 2,
                            Accion = "POST",
                            Activo = true,
                            Descripcion = "Permite crear nuevos usuarios",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Crear Usuarios",
                            Recurso = "usuarios"
                        },
                        new
                        {
                            Id = 3,
                            Accion = "PUT",
                            Activo = true,
                            Descripcion = "Permite actualizar información de usuarios",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Actualizar Usuarios",
                            Recurso = "usuarios"
                        },
                        new
                        {
                            Id = 4,
                            Accion = "DELETE",
                            Activo = true,
                            Descripcion = "Permite eliminar usuarios",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Eliminar Usuarios",
                            Recurso = "usuarios"
                        },
                        new
                        {
                            Id = 5,
                            Accion = "GET",
                            Activo = true,
                            Descripcion = "Permite leer información de permisos",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Leer Permisos",
                            Recurso = "permisos"
                        },
                        new
                        {
                            Id = 6,
                            Accion = "POST",
                            Activo = true,
                            Descripcion = "Permite crear nuevos permisos",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Crear Permisos",
                            Recurso = "permisos"
                        },
                        new
                        {
                            Id = 7,
                            Accion = "PUT",
                            Activo = true,
                            Descripcion = "Permite actualizar información de permisos",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Actualizar Permisos",
                            Recurso = "permisos"
                        },
                        new
                        {
                            Id = 8,
                            Accion = "DELETE",
                            Activo = true,
                            Descripcion = "Permite eliminar permisos",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Eliminar Permisos",
                            Recurso = "permisos"
                        },
                        new
                        {
                            Id = 9,
                            Accion = "GET",
                            Activo = true,
                            Descripcion = "Permite leer información de países",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Leer Países",
                            Recurso = "paises"
                        });
                });

            modelBuilder.Entity("UserManagementAPI.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    // SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id")); // This line is removed

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UltimaConexion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PermisoUsuario", b =>
                {
                    b.HasOne("UserManagementAPI.Models.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManagementAPI.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
